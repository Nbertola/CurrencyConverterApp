// <auto-generated />
using System;
using CurrencyConverterApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyConverterApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210309194204_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("CurrencyConverterApp.Currencies", b =>
                {
                    b.Property<int>("CurrenciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrencyISO4217")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("CurrenciesId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("CurrencyConverterApp.CurrencyQuotes", b =>
                {
                    b.Property<int>("CurrencyQuotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrenciesId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CurrencyQuoteDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("CurrencyQuotesId");

                    b.HasIndex("CurrenciesId");

                    b.ToTable("CurrencyQuotes");
                });

            modelBuilder.Entity("CurrencyConverterApp.CurrencyQuotes", b =>
                {
                    b.HasOne("CurrencyConverterApp.Currencies", "Currencies")
                        .WithMany()
                        .HasForeignKey("CurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currencies");
                });
#pragma warning restore 612, 618
        }
    }
}
